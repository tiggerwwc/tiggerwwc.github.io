{"version":3,"sources":["layout/SideBar/SideBar.tsx","components/CubeNumber/CubeNumber.tsx","components/ViewPortAnimation/ViewPortAnimation.tsx","sections/Splash/Splash.tsx","sections/Landing/Landing.tsx","sections/Video/Video.tsx","sections/Journey/Journey.tsx","layout/MainLayout/MainLayout.tsx","router/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["SideBar","pageProgess","inverseColor","updatePageProgess","scrollToSec","useState","activeSection","secActiveSection","useEffect","artisan","gallery","tour","exibition","journey","className","type","onClick","CubeNumber","number","style","backgroundImage","ViewPortAnimation","children","useScrollPercentage","threshold","ref","percentage","processPercentage","parseFloat","toPrecision","Splash","animationStep","setAnimationStep","splashCount","setSplashCount","dummyDigits","getDummyNumber","Math","floor","random","length","document","documentElement","setProperty","setTimeout","aniTimeSplashStep1","aniTimeSplashStep2","pageReady","splash","countChangeInterval","setInterval","dummyCount","clearInterval","Landing","src","alt","Video","transform","rotateDegree","transformPercent","getVideoTransform","autoPlay","loop","muted","playsinline","opacity","overlayOpacity","getOverlayOpacity","Journey","sectionActive","onInit","typewriter","options","strings","autoStart","cursor","MainLayout","landing","video","footer","setPageProgress","sectionRefs","useRef","prgroess","key","targetRef","current","window","scrollTo","top","getBoundingClientRect","behavior","exact","path","component","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.350fe65b.chunk.js","sourcesContent":["import React, { ReactNode, useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\nimport './SideBar.scss';\n\ninterface Props {\n\tinverseColor?: boolean;\n\tpageProgess: any;\n\tupdatePageProgess: (status: string) => void;\n\tscrollToSec: (key: string) => void;\n}\n\nexport const SideBar = ({\n\tpageProgess, updatePageProgess, inverseColor, scrollToSec,\n}: Props) => {\n\tconst [activeSection, secActiveSection] = useState<string>('');\n\n\tuseEffect(() => {\n\t\t// Determine active section\n\t\tif (pageProgess.artisan) {\n\t\t\tsecActiveSection('artisan');\n\t\t} else if (pageProgess.gallery) {\n\t\t\tsecActiveSection('gallery');\n\t\t} else if (pageProgess.tour) {\n\t\t\tsecActiveSection('tour');\n\t\t} else if (pageProgess.exibition) {\n\t\t\tsecActiveSection('exibition');\n\t\t} else if (pageProgess.journey) {\n\t\t\tsecActiveSection('journey');\n\t\t} else if (activeSection) {\n\t\t\tsecActiveSection('');\n\t\t}\n\t}, [activeSection, pageProgess]);\n\n\treturn (\n\t\t<div className={`sidebar ${inverseColor ? 'sidebar--inverse-color' : ''}`}>\n\t\t\t<div className=\"sidebar__inner\">\n\t\t\t\t<div className=\"sidebar__title\">\n\t\t\t\t\t<div className=\"sidebar__title-fragment\">NWD</div>\n\t\t\t\t\t<div className=\"sidebar__title-fragment\">50TH ANNIVERSARY</div>\n\t\t\t\t</div>\n\t\t\t\t<nav className=\"sidebar__navs\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tonClick={() => { scrollToSec('journey'); }}\n\t\t\t\t\t\tclassName={`sidebar__nav ${activeSection === 'journey' ? 'is-active' : ''}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"sidebar__nav-label\"\n\t\t\t\t\t\t>\n\t\t\t\t\t50 Years of Journey\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName={`sidebar__nav ${activeSection === 'exibition' ? 'is-active' : ''}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"sidebar__nav-label\"\n\t\t\t\t\t\t>\n\t\t\t\t\tTHE EXHIBITION\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName={`sidebar__nav ${activeSection === 'tour' ? 'is-active' : ''}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"sidebar__nav-label\"\n\t\t\t\t\t\t>\nVIRTUAL TOUR\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName={`sidebar__nav ${activeSection === 'gallery' ? 'is-active' : ''}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"sidebar__nav-label\"\n\t\t\t\t\t\t>\n\t\t\t\t\tGALLERY\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName={`sidebar__nav ${activeSection === 'artisan' ? 'is-active' : ''}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"sidebar__nav-label\"\n\t\t\t\t\t\t>\n\t\t\t\t\tBECOME AN ARTISAN\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t</nav>\n\t\t\t\t<nav className=\"sidebar__bottom\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"sidebar__join\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"sidebar__join-label\"\n\t\t\t\t\t\t>\n\t\t\t\t\tBECOME AN ARTISAN\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"sidebar__soc sidebar__soc--fb\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"sidebar__soc-label\"\n\t\t\t\t\t\t>\n\t\t\t\t\tFacebook\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"sidebar__soc sidebar__soc--ig\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"sidebar__soc-label\"\n\t\t\t\t\t\t>\n\t\t\t\t\tInstagram\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</button>\n\t\t\t\t</nav>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\n\nexport default SideBar;\n\n// const mapStateToProps = (state: RootState) => ({\n// });\n\n// const mapDispatchToProps = (dispatch: Dispatch) => ({\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(MainLayout);\n","import React from 'react';\nimport './CubeNumber.scss';\n\ninterface Props {\n\tnumber: string;\n}\n\nexport const CubeNumber = ({ number }: Props) => (\n\t<div className=\"cube-number\">\n\t\t<div className=\"cube-number__cubes\">\n\t\t\t<div\n\t\t\t\tclassName={`cube-number__cube cube-number__cube--left cube-number__cube--${number[0]}`}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"cube-number__cube-graphic\"\n\t\t\t\t\tstyle={{ backgroundImage: `url(/img/splash/img-num-${number[0]}.svg)` }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName={`cube-number__cube cube-number__cube--right cube-number__cube--${number[1]}`}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"cube-number__cube-graphic\"\n\t\t\t\t\tstyle={{ backgroundImage: `url(/img/splash/img-num-${number[1]}.svg)` }}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"cube-number__nwd\"\n\t\t\t\tstyle={{ backgroundImage: 'url(/img/splash/img-nwd.svg)' }}\n\t\t\t/>\n\t\t</div>\n\t</div>\n);\n\nexport default CubeNumber;\n","import React, { ReactNode } from 'react';\nimport { useScrollPercentage } from 'react-scroll-percentage';\nimport './ViewPortAnimation.scss';\n\ninterface Props {\n\tchildren?: ReactNode;\n}\n\nexport const ViewPortAnimation = ({ children }: Props) => {\n\t// Scroll Monitor\n\tconst [ref, percentage] = useScrollPercentage({\n\t\t/* Optional options */\n\t\tthreshold: 0,\n\t});\n\tconst processPercentage = parseFloat(percentage.toPrecision(2));\n\n\treturn (\n\t\t<div\n\t\t\tref={ref}\n\t\t\tclassName={`viewport-animtion ${processPercentage > 0.2 ? 'is-active' : ''}`}\n\t\t>\n\t\t\t<div className=\"viewport-animtion__body\">\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ViewPortAnimation;\n","import React, { useEffect, useState } from 'react';\nimport { CubeNumber } from '../../components';\nimport './Splash.scss';\n\ninterface Props {\n\tpageProgess: any;\n\tupdatePageProgess: (status: string) => void;\n}\n\nconst Splash = ({ pageProgess, updatePageProgess }: Props) => {\n\tconst [animationStep, setAnimationStep] = useState<number>(0);\n\tconst [splashCount, setSplashCount] = useState<string>('38');\n\tconst dummyDigits = [0, 3, 5, 8];\n\tconst getDummyNumber = () => dummyDigits[Math.floor(Math.random() * dummyDigits.length)];\n\n\t// Config animation\n\tconst aniTimeSplashStep1 = 3; // Logo enlarge\n\tconst aniTimeSplashStep2 = 1.2; // Logo Still\n\tconst aniTimeSplashStep3 = 1; // page ready, logo move top right\n\tdocument.documentElement.style.setProperty('--ani-time-splash-step-1', `${aniTimeSplashStep1}s`);\n\tdocument.documentElement.style.setProperty('--ani-time-splash-step-2', `${aniTimeSplashStep2}s`);\n\tdocument.documentElement.style.setProperty('--ani-time-splash-step-3', `${aniTimeSplashStep3}s`);\n\n\tuseEffect(() => {\n\t\t// Animation Steps Control\n\t\tif (animationStep === 0) {\n\t\t\tsetAnimationStep(1);\n\t\t}\n\t\tif (animationStep === 1) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetAnimationStep(2);\n\t\t\t}, aniTimeSplashStep1 * 1000);\n\t\t}\n\t\tif (animationStep === 2) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetAnimationStep(3);\n\t\t\t}, aniTimeSplashStep2 * 1000);\n\t\t}\n\t\tif (animationStep === 3) {\n\t\t\tif (!pageProgess.pageReady) {\n\t\t\t\tupdatePageProgess({\n\t\t\t\t\t...pageProgess,\n\t\t\t\t\tpageReady: 'ready',\n\t\t\t\t\tsplash: 'finish',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [animationStep, pageProgess, updatePageProgess]);\n\n\tuseEffect(() => {\n\t\tconst countChangeInterval = setInterval(() => {\n\t\t\tconst dummyCount = (animationStep === 1) ? `${getDummyNumber()}${getDummyNumber()}` : '50';\n\t\t\tsetSplashCount(dummyCount);\n\t\t}, 100);\n\t\treturn () => {\n\t\t\tclearInterval(countChangeInterval);\n\t\t};\n\t}, [animationStep, getDummyNumber]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`splash splash--step-${animationStep}`}\n\t\t>\n\t\t\t<div className=\"splash__inner\">\n\t\t\t\t<div className={`splash__logo ${pageProgess.journey ? 'splash__logo--color-inverse' : ''}`}>\n\t\t\t\t\t<CubeNumber number={splashCount} />\n\t\t\t\t\t<div className=\"splash__static-logo\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Splash;\n","import React, { useEffect, useState } from 'react';\nimport { useScrollPercentage } from 'react-scroll-percentage';\nimport './Landing.scss';\n\ninterface Props {\n\tpageProgess: any;\n\tupdatePageProgess: (status: string) => void;\n}\n\nconst Landing = ({ pageProgess, updatePageProgess }: Props) => {\n\t// Scroll Monitor\n\tconst [ref, percentage] = useScrollPercentage({\n\t\t/* Optional options */\n\t\tthreshold: 0,\n\t});\n\tconst processPercentage = parseFloat(percentage.toPrecision(2));\n\n\treturn (\n\t\t<div\n\t\t\tref={ref}\n\t\t\tclassName={`landing ${processPercentage < 1 ? 'is-active' : ''}`}\n\t\t>\n\t\t\t<div className=\"landing__inner\">\n\t\t\t\t<div className=\"landing__slogans\">\n\t\t\t\t\t<img className=\"landing__slogan landing__slogan--1\" src=\"/img/landing/img-slogan-1.svg\" alt=\"We Create\" />\n\t\t\t\t\t<img className=\"landing__slogan landing__slogan--2\" src=\"/img/landing/img-slogan-2.svg\" alt=\"We Create\" />\n\t\t\t\t\t<img className=\"landing__slogan landing__slogan--3\" src=\"/img/landing/img-slogan-3.svg\" alt=\"We Create\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Landing;\n","import React, { useEffect, useState } from 'react';\nimport { useScrollPercentage } from 'react-scroll-percentage';\nimport './Video.scss';\n\ninterface Props {\n\tpageProgess: any;\n\tupdatePageProgess: (status: string) => void;\n}\n\nconst Video = ({ pageProgess, updatePageProgess }: Props) => {\n\t// Scroll Monitor\n\tconst [ref, percentage] = useScrollPercentage({\n\t\t/* Optional options */\n\t\tthreshold: 0,\n\t});\n\tconst processPercentage = parseFloat(percentage.toPrecision(2));\n\n\n\tconst getVideoTransform = () => {\n\t\t// Rotate\n\t\tconst initialRotate = -15;\n\t\tconst rotateFactor = 1 - (processPercentage * 3);\n\t\tlet rotateDegree = rotateFactor * initialRotate;\n\t\tif (rotateDegree > 0) {\n\t\t\trotateDegree = 0;\n\t\t}\n\t\tif (processPercentage > 0.5) {\n\t\t\trotateDegree = 0;\n\t\t}\n\n\t\t// Transform\n\t\tconst fullScreen = 0.4;\n\t\tconst fadeOutStartPoint = 0.6;\n\t\tconst fadeOutEndPoint = 0.75;\n\t\tlet transformPercent = ((1 - fullScreen) + processPercentage);\n\t\tif (processPercentage > fadeOutStartPoint) {\n\t\t\ttransformPercent = (fadeOutEndPoint - processPercentage)\n\t\t\t\t/ (fadeOutEndPoint - fadeOutStartPoint);\n\t\t\tif (transformPercent < 0.65) {\n\t\t\t\ttransformPercent = 0.65;\n\t\t\t}\n\t\t}\n\t\tif (transformPercent > 1) {\n\t\t\ttransformPercent = 1;\n\t\t}\n\n\t\treturn `scale(${transformPercent}) rotate(${rotateDegree}deg)`;\n\t};\n\n\n\tconst getOverlayOpacity = () => {\n\t\tlet overlayOpacity = processPercentage * 2;\n\t\tif (processPercentage > 0.5) {\n\t\t\toverlayOpacity = 1 - processPercentage * 1.5;\n\t\t}\n\t\tif (overlayOpacity > 1) {\n\t\t\toverlayOpacity = 1;\n\t\t}\n\t\tif (overlayOpacity < 0) {\n\t\t\toverlayOpacity = 0;\n\t\t}\n\t\treturn `${overlayOpacity}`;\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\tref={ref}\n\t\t\t\tclassName={`sec-video ${pageProgess ? 'is-active' : ''}`}\n\t\t\t>\n\t\t\t\t<div className=\"sec-video__inner\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"sec-video__video\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttransform: getVideoTransform(),\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<video autoPlay loop muted playsinline>\n\t\t\t\t\t\t\t<source src=\"/videos/video-dummy.mp4\" type=\"video/mp4\" />\n\t\t\t\t\t\tYour browser does not support the video tag.\n\t\t\t\t\t\t</video>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"sec-video__overlay\"\n\t\t\t\tstyle={{\n\t\t\t\t\topacity: getOverlayOpacity(),\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{/* <div className=\"sec-video__process-info\">\n\t\t\t\t{parseFloat(percentage.toPrecision(2))}\n\t\t\t\t<p>\n\t\t\t\t\t{JSON.stringify(pageProgess)}\n\t\t\t\t</p>\n\t\t\t</div> */}\n\t\t</>\n\t);\n};\n\nexport default Video;\n","import React, { useEffect, useState } from 'react';\nimport { useScrollPercentage } from 'react-scroll-percentage';\nimport Typewriter from 'typewriter-effect';\nimport { ViewPortAnimation } from '../../components';\nimport './Journey.scss';\n\ninterface Props {\n\tpageProgess: any;\n\tupdatePageProgess: (status: any) => void;\n}\n\nconst Journey = ({ pageProgess, updatePageProgess }: Props) => {\n\tconst [ref, percentage] = useScrollPercentage({\n\t\t/* Optional options */\n\t\tthreshold: 0,\n\t});\n\n\tconst processPercentage = parseFloat(percentage.toPrecision(2));\n\n\tconst sectionActive = processPercentage > 0.2;\n\n\n\tuseEffect(() => {\n\t\tif (sectionActive && pageProgess.journey !== 'active') {\n\t\t\tif (pageProgess.journey !== 'active') {\n\t\t\t\tupdatePageProgess({\n\t\t\t\t\t...pageProgess,\n\t\t\t\t\tjourney: 'active',\n\t\t\t\t});\n\t\t\t}\n\t\t} else if (pageProgess.journey === 'active') {\n\t\t\tupdatePageProgess({\n\t\t\t\t...pageProgess,\n\t\t\t\tjourney: '',\n\t\t\t});\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [sectionActive]);\n\n\t// const getVideoTransform = () => {\n\t// \t// Rotate\n\t// \tconst initialRotate = -15;\n\t// \tconst rotateFactor = 1 - (processPercentage * 2);\n\t// \tlet rotateDegree = rotateFactor * initialRotate;\n\t// \tif ((rotateDegree) < 0) {\n\t// \t\trotateDegree = 0;\n\t// \t}\n\n\t// \t// Transform\n\t// \tlet transformPercent = (0.5 + processPercentage);\n\t// \tif (processPercentage > 0.8) {\n\t// \t\ttransformPercent = 1 - (processPercentage - 0.8);\n\t// \t}\n\t// \tif (transformPercent > 1) {\n\t// \t\ttransformPercent = 1;\n\t// \t}\n\n\t// \treturn `scale(${transformPercent}) rotate(${rotateDegree}deg)`;\n\t// };\n\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\tref={ref}\n\t\t\t\tclassName={`sec-journey ${sectionActive ? 'is-active' : ''}`}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"sec-journey__bg\"\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"sec-journey__bg-graphic\"\n\t\t\t\t\t// style={{\n\t\t\t\t\t// \topacity: getOverlayOpacity(),\n\t\t\t\t\t// }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"sec-journey__inner\">\n\t\t\t\t\t<section className=\"sec-journey__subsec sec-journey__subsec--story\">\n\t\t\t\t\t\t<h2 className=\"sec-journey__title\">\n\t\t\t\t\t\t\t<ViewPortAnimation>\n\t\t\t\t\t\t\t\t<small className=\"sec-journey__title-tag\">OUR STORY</small>\n\t\t\t\t\t\t\t\t<span className=\"sec-journey__title-txt\">50 YEARS OF JOURNEY</span>\n\t\t\t\t\t\t\t</ViewPortAnimation>\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<div className=\"sec-journey__desc\">\n\t\t\t\t\t\t\t<ViewPortAnimation>\n\t\t\t\t\t\t\t\t<p><span className=\"color-main\">The year is 1970.</span></p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tA budding Hong Kong is on the cusp of its meteoric rise.\n\t\t\t\t\t\t\t\t\tIdeas and opportunities abound, people hunger for success,\n\t\t\t\t\t\t\t\t\tyet only a handful of visionaries have the mind to create\n\t\t\t\t\t\t\t\t\tsomething that would define the city.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tThis is the beginning of New World Development,\n\t\t\t\t\t\t\t\t\tthen a young, ambitious property developer with\n\t\t\t\t\t\t\t\t\ta mission to build a better society for the community.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</ViewPortAnimation>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className=\"sec-journey__subsec sec-journey__subsec--create\">\n\t\t\t\t\t\t<h2 className=\"sec-journey__title\">\n\t\t\t\t\t\t\t<span className=\"sec-journey__title-txt\">WE CREATE</span>\n\t\t\t\t\t\t\t<span className=\"sec-journey__effect-typing\">\n\t\t\t\t\t\t\t\t<span className=\"sec-journey__title-txt color-main\">\n\t\t\t\t\t\t\t\t\t<Typewriter\n\t\t\t\t\t\t\t\t\t\tonInit={(typewriter) => {\n\t\t\t\t\t\t\t\t\t\t\t// typewriter.typeString('Hello World!')\n\t\t\t\t\t\t\t\t\t\t\t// \t.callFunction(() => {\n\t\t\t\t\t\t\t\t\t\t\t// \t\tconsole.log('String typed out!');\n\t\t\t\t\t\t\t\t\t\t\t// \t})\n\t\t\t\t\t\t\t\t\t\t\t// \t.pauseFor(2500)\n\t\t\t\t\t\t\t\t\t\t\t// \t.deleteAll()\n\t\t\t\t\t\t\t\t\t\t\t// \t.callFunction(() => {\n\t\t\t\t\t\t\t\t\t\t\t// \t\tconsole.log('All strings were deleted');\n\t\t\t\t\t\t\t\t\t\t\t// \t})\n\t\t\t\t\t\t\t\t\t\t\t// \t.start();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\t\t\t\tstrings: [\n\t\t\t\t\t\t\t\t\t\t\t\t'INSPIRING A NEW WORLD',\n\t\t\t\t\t\t\t\t\t\t\t\t'MAKING 50 YEARS OF LEGACY',\n\t\t\t\t\t\t\t\t\t\t\t\t'SETTING THE NEW STAGE.',\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\tautoStart: true,\n\t\t\t\t\t\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\t\t\t\t\t\tcursor: '',\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<div className=\"sec-journey__desc\">\n\t\t\t\t\t\t\t<ViewPortAnimation>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tNew World marches on with the belief\n\t\t\t\t\t\t\t\tthat businesses exist for the community, and to inspire next generation.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</ViewPortAnimation>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className=\"sec-journey__subsec sec-journey__subsec--history\">\n\t\t\t\t\t\t<h2 className=\"sec-journey__title\">\n\t\t\t\t\t\t\t<span className=\"sec-journey__effect-perspective\">\n\t\t\t\t\t\t\t\t<span className=\"sec-journey__line\">\n\t\t\t\t\t\t\t\t\t<span className=\"sec-journey__title-txt\">&nbsp;</span>\n\t\t\t\t\t\t\t\t\t<span className=\"sec-journey__title-txt\">WE MAKE HISTORY</span>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className=\"sec-journey__line\">\n\t\t\t\t\t\t\t\t\t<span className=\"sec-journey__title-txt color-main\">WE MAKE HISTORY</span>\n\t\t\t\t\t\t\t\t\t<span className=\"sec-journey__title-txt color-main\">HISTORY MAKES US</span>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className=\"sec-journey__line\">\n\t\t\t\t\t\t\t\t\t<span className=\"sec-journey__title-txt\">HISTORY MAKES US</span>\n\t\t\t\t\t\t\t\t\t<span className=\"sec-journey__title-txt\">&nbsp;</span>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default Journey;\n","import React, { useState, useEffect, useRef } from 'react';\nimport Scrollbar from 'react-smooth-scrollbar';\n// import * as Scroll from 'react-scroll';\n// import { Link, Element, Events, animateScroll as scroll, scrollSpy, scroller } from 'react-scroll'\n\nimport './MainLayout.scss';\n// import { Dispatch } from 'redux';\n// import { RootState } from 'MyTypes';\n// import { connect } from 'react-redux';\nimport Header from '../Header/Header';\nimport SideBar from '../SideBar/SideBar';\nimport Splash from '../../sections/Splash/Splash';\nimport Landing from '../../sections/Landing/Landing';\nimport Video from '../../sections/Video/Video';\nimport Journey from '../../sections/Journey/Journey';\n\n// interface Props {\n// \tchildren?: ReactNode;\n// }\n\nexport const MainLayout = () => {\n\tconst [pageProgess, setPageProgress] = useState<any>({\n\t\tpageReady: '',\n\t\tsplash: '',\n\t\tlanding: '',\n\t\tvideo: '',\n\t\tjourney: '',\n\t\texibition: '',\n\t\ttour: '',\n\t\tgallery: '',\n\t\tartisan: '',\n\t\tfooter: '',\n\t});\n\tconst sectionRefs = useRef<any>([]);\n\n\tconst updatePageProgess = (prgroess: any) => {\n\t\tsetPageProgress(prgroess);\n\t};\n\n\tconst scrollToSec = (key: string) => {\n\t\t// console.log('scrollToRef', ref);\n\t\tconst targetRef = sectionRefs?.current[key];\n\t\tif (targetRef) {\n\t\t\twindow.scrollTo({\n\t\t\t\ttop: targetRef.getBoundingClientRect().top,\n\t\t\t\tbehavior: 'smooth',\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={`main-layout ${pageProgess.pageReady ? 'page-ready' : ''} ${pageProgess.splash ? 'splash-finished' : ''}`}>\n\t\t\t{/* <Scrollbar\n\t\t\t\tdamping={0.1}\n\t\t\t\t// thumbMinSize={number}\n\t\t\t\t// syncCallbacks={false}\n\t\t\t\t// renderByPixels={boolean}\n\t\t\t\t// alwaysShowTracks={boolean}\n\t\t\t\t// continuousScrolling={boolean}\n\t\t\t\t// wheelEventTarget={element}\n\t\t\t\t// plugins={object}\n\t\t\t\t// onScroll={func}\n\t\t\t> */}\n\t\t\t<div className=\"main-layout__body\">\n\t\t\t\t<h1 className=\"a11y-hidden\">NWD50</h1>\n\t\t\t\t<SideBar\n\t\t\t\t\tinverseColor={pageProgess.journey}\n\t\t\t\t\tpageProgess={pageProgess}\n\t\t\t\t\tupdatePageProgess={updatePageProgess}\n\t\t\t\t\tscrollToSec={scrollToSec}\n\t\t\t\t/>\n\t\t\t\t<main className=\"main-layout__main\">\n\t\t\t\t\t{/* {children} */}\n\t\t\t\t\t<Splash\n\t\t\t\t\t\tpageProgess={pageProgess}\n\t\t\t\t\t\tupdatePageProgess={updatePageProgess}\n\t\t\t\t\t/>\n\t\t\t\t\t<Landing\n\t\t\t\t\t\tpageProgess={pageProgess}\n\t\t\t\t\t\tupdatePageProgess={updatePageProgess}\n\t\t\t\t\t/>\n\t\t\t\t\t<Video\n\t\t\t\t\t\tpageProgess={pageProgess}\n\t\t\t\t\t\tupdatePageProgess={updatePageProgess}\n\t\t\t\t\t/>\n\t\t\t\t\t<div ref={(ref) => {\n\t\t\t\t\t\tsectionRefs.current.journey = ref;\n\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Journey\n\t\t\t\t\t\tpageProgess={pageProgess}\n\t\t\t\t\t\tupdatePageProgess={updatePageProgess}\n\t\t\t\t\t/>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t\t{/* </Scrollbar> */}\n\t\t</div>\n\t);\n};\n\n\nexport default MainLayout;\n\n// const mapStateToProps = (state: RootState) => ({\n// });\n\n// const mapDispatchToProps = (dispatch: Dispatch) => ({\n// });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(MainLayout);\n","import React from 'react';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n} from 'react-router-dom';\nimport MainLayout from '../layout/MainLayout/MainLayout';\n\nexport default () => (\n\t<Router>\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\" component={MainLayout} />\n\t\t</Switch>\n\t</Router>\n);\n","import React from 'react';\nimport MainRouter from './router';\n\nconst App: React.FC = () => (\n\t<MainRouter />\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}