{"version":3,"sources":["helper/sandCanvas.ts","components/SandTest2/SandTest2.tsx","components/LoaderDots/LoaderDots.tsx","api/axios.ts","components/SandTable/SandTable.tsx","api/index.ts","layout/MainLayout/MainLayout.tsx","components/PatternCreater/PatternCreater.tsx","router/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["createCanvas","self","options","canvas","context","loopLogic","left","right","thisOptions","currentTransition","mode","getParticlesNum","screenMode","particlesNumber","particles","text","nextText","shape","mouse","x","y","layout","type","window","colors","random","uniform","drop","ribbon","init","slideshowContainer","document","querySelector","existingCanvas","removeChild","createElement","onResize","appendChild","getContext","addEventListener","onTouchUp","onTouchMove","onMouseMove","onMouseOut","handleClick","onresize","createParticles","setTimeout","classList","add","console","error","reinitCanvas","updateOptions","updatedOptions","width","innerWidth","height","innerHeight","root","documentElement","sandElem","clientWidth","clientHeight","style","setProperty","updateTransition","scrollX","pageXOffset","scrollLeft","scrollY","pageYOffset","scrollTop","event","preventDefault","refScaler","scale","getBoundingClientRect","offsetWidth","mousePosX","pageX","mousePosY","pageY","canvasLeft","canvasTop","top","updateCanvasOptions","resetMouse","touches","onLeftClick","Math","max","remove","length","onRightClick","min","contains","action","tarType","direction","targetBind","cursor","targetUnbind","removeEventListener","fullreset","quantity","len","stepCount","uniformFactor","floor","sqrt","adjIndex","colCount","ceil","rowCount","steps","textIndex","patternIndex","initX","randomBetween","initY","radius","hasBorn","color","particleConfig","friction","char","randomChar","ease","bornSpeed","alpha","maxAlpha","maxRadius","interactive","angle","push","cancelAnimationFrame","loop","forEach","call","particle","index","rowUnit","colUnit","xOffset","sin","cos","speed","targetDistX","targetDistY","initialized","particlesBackToOrigin","extra","slice","splice","clearRect","round","alphaPattern","circleString","adjustedX","computedValue","abs","opac","drawASCIICircle","pureMouseParticleDistance","pointA","pointB","dx","dy","distanceTo","fontSize","save","globalAlpha","fillStyle","font","fillText","beginPath","fill","restore","render","requestAnimFrame","reCreateCanvas","basicChars","Array","prototype","map","eachLetter","randomChars","chars","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","SandTest2","fullscreen","refreshTrigger","useState","canvasCreated","setCanvasCreated","useEffect","_","reverse","join","className","LoaderDots","show","instance","axios","create","baseURL","timeout","headers","SandTable","history","useHistory","setRefreshTrigger","inputMsg","setInputMsg","msgs","setMsgs","setScreenMode","aboutOpen","setAboutOpen","isTyping","setIsTyping","testCount","setTestCount","loadMsgs","get","then","res","tarMsg","data","item","message","xor","catch","e","URLSearchParams","location","search","replace","dispatchEvent","Event","useInterval","addMsg","msg","newMsg","newMsgs","post","toAbout","key","scroller","scrollTo","duration","delay","smooth","offset","SandTableSidebar","onClick","href","target","rel","src","PUBLIC_URL","alt","defaultScale","minScale","maxScale","onZoomChange","value","canvasZoom","zoomIn","zoomOut","setScale","resetTransform","ReactSlider","thumbClassName","trackClassName","renderThumb","props","state","valueNow","defaultValue","onChange","val","title","dangerouslySetInnerHTML","__html","placeholder","onFocus","onBlur","name","MainLayout","useTranslation","t","PatternCreater","children","canvasSize","onPoints","setOnPoints","savedPoints","localStorage","getItem","optionsArr","Number","newPoints","setItem","togglePoint","exact","path","component","App","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57ed579d.chunk.js","sourcesContent":["/* eslint-disable max-len */\n/* eslint-disable no-undef */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-bitwise */\n/* eslint-disable no-var */\n/* eslint-disable vars-on-top */\n/* eslint-disable no-redeclare */\n/* eslint-disable no-case-declarations */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-unused-expressions */\nimport _ from 'lodash';\n\ndeclare global {\n\tinterface Window {\n\t\tPUBLIC_URL: any;\n\t\tdataLayer: any;\n\t\trequestAnimFrame: any;\n\t\tonload: any;\n\t\tparticles: any;\n\t\tcanvasZoom: any;\n\t\treinitCanvas: any;\n\t\tupdateCanvasOptions: any;\n\t\treCreateCanvas: any;\n\t}\n}\ninterface Options {\n\tchars: string[];\n\tparticlesBackToOrigin: boolean;\n\tmode: string;\n\tscreenMode: string;\n}\n\nexport const createCanvas = (self: any, options: Options) => {\n\tlet thisOptions: Options = options;\n\tlet canvas: any;\n\tlet context: any;\n\tlet loopLogic: any;\n\tlet currentTransition = thisOptions?.mode || 'random';\n\tconst getParticlesNum = () => ((currentTransition === 'pattern') ? 1089 : ((thisOptions.screenMode === 'fullscreen') ? 1600 : 625));\n\tlet particlesNumber = getParticlesNum();\n\tconst particles: any = [];\n\tconst text: any = [];\n\tlet nextText = [];\n\tconst shape: any = {};\n\tlet mouse = {\n\t\tx: -99999,\n\t\ty: -99999,\n\t};\n\tlet left: any; let right: any;\n\tlet layout = 0;\n\t// const type = ['random', 'uniform', 'drop', 'ribbon'];\n\tconst type = ['random', 'uniform', 'pattern'];\n\tconst FPS = 660;\n\twindow.particles = particles;\n\t/*\n\t* List colors.\n\t*/\n\n\tconst colors = {\n\t\trandom: ['#FFF', '#FFF'],\n\t\tuniform: ['#FFF', '#FFF'],\n\t\tdrop: ['#1d75cf', '#3a5945'],\n\t\tribbon: ['#702744', '#f98d00'],\n\t};\n\n\t/*\n\t * Init.\n\t */\n\n\tconst init = () => {\n\t\t// window.removeEventListener('initCanvas', init, false);\n\t\tconst slideshowContainer = document.querySelector('.ip-slideshow');\n\t\tconst existingCanvas = document.querySelector('canvas');\n\n\t\tif (existingCanvas) {\n\t\t\tslideshowContainer?.removeChild(existingCanvas);\n\t\t\tcanvas = null;\n\t\t}\n\n\t\tcanvas = document.createElement('canvas');\n\n\t\tonResize();\n\n\t\tslideshowContainer?.appendChild(canvas);\n\n\t\t// Browser supports canvas?\n\t\tif (capable()) {\n\t\t\tcontext = canvas.getContext('2d');\n\n\t\t\t// Events\n\t\t\tif ('ontouchmove' in window) {\n\t\t\t\tcanvas.addEventListener('touchup', onTouchUp, false);\n\t\t\t\tcanvas.addEventListener('touchmove', onTouchMove, false);\n\t\t\t} else {\n\t\t\t\tcanvas.addEventListener('mousemove', onMouseMove, false);\n\t\t\t\tcanvas.addEventListener('mouseout', onMouseOut, false);\n\t\t\t}\n\n\t\t\t// Arrows\n\t\t\thandleClick('bind', 'left');\n\t\t\thandleClick('bind', 'right');\n\n\t\t\twindow.onresize = onResize;\n\n\t\t\tcreateParticles();\n\t\t\tif (thisOptions?.screenMode !== 'fullscreen') {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tcurrentTransition = 'uniform';\n\t\t\t\t\tparticlesNumber = getParticlesNum();\n\t\t\t\t\tcreateParticles();\n\t\t\t\t}, 2000);\n\t\t\t}\n\n\t\t\t// Arrows elements\n\t\t\tleft = document.querySelector('.ip-nav-left');\n\t\t\tright = document.querySelector('.ip-nav-right');\n\n\t\t\t// Show right arrow\n\t\t\tright?.classList.add('ip-nav-show');\n\t\t} else {\n\t\t\tconsole.error('Sorry, switch to a better browser to see this experiment.');\n\t\t}\n\t};\n\twindow.reinitCanvas = init;\n\n\tconst updateOptions = (updatedOptions: Options) => {\n\t\tthisOptions = updatedOptions;\n\t};\n\twindow.updateCanvasOptions = updateOptions;\n\n\t/*\n\t * Checks if browser supports canvas element.\n\t */\n\n\tfunction capable() {\n\t\treturn canvas.getContext && canvas.getContext('2d');\n\t}\n\n\t/*\n\t * On resize window event.\n\t */\n\n\tfunction onResize() {\n\t\tif (thisOptions?.screenMode === 'fullscreen') {\n\t\t\tcanvas.width = window.innerWidth * 4;\n\t\t\tcanvas.height = window.innerHeight * 4;\n\t\t} else if (thisOptions?.screenMode === 'halfscreen') {\n\t\t\tconst root = document.documentElement;\n\t\t\tconst sandElem = document.querySelector('.sandtable-board');\n\t\t\tif (sandElem) {\n\t\t\t\tcanvas.width = sandElem?.clientWidth * 4;\n\t\t\t\tcanvas.height = sandElem?.clientHeight * 4;\n\t\t\t\troot.style.setProperty('--sand-w', `${sandElem?.clientWidth}px`);\n\t\t\t\troot.style.setProperty('--sand-h', `${sandElem?.clientHeight}px`);\n\t\t\t}\n\t\t} else {\n\t\t\tcanvas.width = 1920;\n\t\t\tcanvas.height = 1440;\n\t\t}\n\t\tupdateTransition();\n\t}\n\n\tfunction scrollX() {\n\t\treturn window.pageXOffset || window.document.documentElement.scrollLeft;\n\t}\n\n\tfunction scrollY() {\n\t\treturn window.pageYOffset || window.document.documentElement.scrollTop;\n\t}\n\n\t/*\n\t * Mouse move event.\n\t */\n\n\tfunction onMouseMove(event: any) {\n\t\tevent.preventDefault();\n\t\tconst refScaler: any = document.querySelector('.react-transform-element');\n\t\tconst scale = refScaler ? (1 / (refScaler.getBoundingClientRect().width / refScaler.offsetWidth)) * 4 : 1;\n\t\tconst mousePosX = event.pageX;\n\t\tconst mousePosY = event.pageY;\n\t\tconst canvasLeft = scrollX() + canvas.getBoundingClientRect().left;\n\t\tconst canvasTop = scrollY() + canvas.getBoundingClientRect().top;\n\t\tmouse.x = (mousePosX - canvasLeft) * scale;\n\t\tmouse.y = (mousePosY - canvasTop) * scale;\n\t}\n\n\tconst resetMouse = () => {\n\t\t// Reset mouse position\n\t\tmouse = {\n\t\t\tx: -1000,\n\t\t\ty: -1000,\n\t\t};\n\t};\n\n\tconst onMouseOut = () => {\n\t\tresetMouse();\n\t};\n\n\t/*\n\t * Touch up event.\n\t */\n\n\tfunction onTouchUp(event: any) {\n\t\tevent.preventDefault();\n\t\tresetMouse();\n\t}\n\n\t/*\n\t * Touch move event.\n\t */\n\n\tfunction onTouchMove(event: any) {\n\t\tevent.preventDefault();\n\t\t// mouse.x = event.touches[0].pageX - (scrollX() + canvas.getBoundingClientRect().left);\n\t\t// mouse.y = event.touches[0].pageY - (scrollY() + canvas.getBoundingClientRect().top);\n\t\tconst refScaler: any = document.querySelector('.react-transform-element');\n\t\tconst scale = refScaler ? (1 / (refScaler.getBoundingClientRect().width / refScaler.offsetWidth)) * 4 : 1;\n\t\tconst mousePosX = event.touches[0].pageX;\n\t\tconst mousePosY = event.touches[0].pageY;\n\t\tconst canvasLeft = scrollX() + canvas.getBoundingClientRect().left;\n\t\tconst canvasTop = scrollY() + canvas.getBoundingClientRect().top;\n\t\tmouse.x = (mousePosX - canvasLeft) * scale;\n\t\tmouse.y = (mousePosY - canvasTop) * scale;\n\t}\n\n\t/*\n\t * Left click event.\n\t */\n\n\tfunction onLeftClick(event: any) {\n\t\tevent.preventDefault();\n\n\t\tcurrentTransition = type[Math.max(0, --layout)];\n\n\t\t// Reset towards points, and fill with new\n\t\tnextText = [];\n\t\t// updateText();\n\n\t\tif (layout === 0) {\n\t\t\tleft.classList.remove('ip-nav-show');\n\t\t\thandleClick('unbind', 'left');\n\t\t\treturn;\n\t\t}\n\n\t\tif (layout === type.length - 1) {\n\t\t\tright.classList.add('ip-nav-show');\n\t\t\thandleClick('bind', 'right');\n\t\t}\n\t}\n\n\t/*\n\t * Right click event.\n\t */\n\n\tfunction onRightClick(event: any) {\n\t\tevent.preventDefault();\n\n\t\tcurrentTransition = type[Math.min(type.length, ++layout)];\n\n\t\t// Reset towards points, and fill with new\n\t\tnextText = [];\n\t\t// updateText();\n\n\t\tif (layout === 1) {\n\t\t\tleft?.classList.add('ip-nav-show');\n\t\t\thandleClick('bind', 'left');\n\t\t}\n\t\tif (layout === type.length - 1) {\n\t\t\tif (right?.classList.contains('ip-nav-show')) {\n\t\t\t\tright?.classList.remove('ip-nav-show');\n\t\t\t}\n\t\t\thandleClick('unbind', 'right');\n\t\t}\n\t}\n\n\t/*\n\t * Handle click events for arrows.\n\t */\n\n\tfunction handleClick(action: any, tarType: any) {\n\t\tconst direction = tarType === 'left' ? onLeftClick : onRightClick;\n\n\t\tswitch (action) {\n\t\t\tcase 'bind':\n\t\t\t\tconst targetBind: any = document.querySelector(`.ip-nav-${tarType}`);\n\t\t\t\tif (targetBind) {\n\t\t\t\t\ttargetBind.addEventListener('touchstart', direction, false);\n\t\t\t\t\ttargetBind.addEventListener('click', direction, false);\n\t\t\t\t\ttargetBind.style.cursor = 'pointer';\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'unbind':\n\t\t\t\tconst targetUnbind: any = document.querySelector(`.ip-nav-${tarType}`);\n\t\t\t\tif (targetUnbind) {\n\t\t\t\t\ttargetUnbind.removeEventListener('touchstart', direction, false);\n\t\t\t\t\ttargetUnbind.removeEventListener('click', direction, false);\n\t\t\t\t\ttargetUnbind.style.cursor = 'default';\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/*\n\t * Create particles.\n\t */\n\n\tconst createParticles = (fullreset?: boolean, updatedOptions?: Options) => {\n\t\tif (updatedOptions) {\n\t\t\tupdateOptions(updatedOptions);\n\t\t}\n\t\tif (!canvas) return;\n\t\tfor (let quantity = 0, len = particlesNumber; quantity < len; quantity++) {\n\t\t\tvar x; var y; var steps;\n\n\t\t\t// var steps = Math.PI * 2 * quantity / len;\n\n\t\t\t// x = canvas.width * 0.5 + 10 * Math.cos(steps);\n\t\t\t// y = 180 + 10 * Math.sin(steps);\n\t\t\tconst stepCount = quantity;\n\t\t\tconst uniformFactor = Math.floor(Math.sqrt(particlesNumber)); // = row and col number\n\n\t\t\tconst adjIndex = stepCount + 1;\n\t\t\tconst colCount = Math.ceil(adjIndex / uniformFactor);\n\t\t\tconst rowCount = (adjIndex % uniformFactor === 0) ? uniformFactor : adjIndex % uniformFactor;\n\n\t\t\t// console.log('uniformFactor', uniformFactor);\n\t\t\t// console.log('rowCount', rowCount);\n\t\t\t// console.log('colCount', colCount);\n\n\t\t\tvar steps: any = stepCount / len;\n\t\t\tconst textIndex = rowCount + (uniformFactor * (uniformFactor - colCount));\n\t\t\tconst patternIndex = colCount + (uniformFactor * (rowCount - 1));\n\n\t\t\tvar initX = randomBetween(0, canvas.width);\n\t\t\tvar initY = randomBetween(0, canvas.height);\n\t\t\tx = Math.floor(canvas.width / 2);\n\t\t\ty = initY - randomBetween(0, canvas.height * 3);\n\n\t\t\tconst radius = randomBetween(0, 1);\n\t\t\tconst hasBorn = !(radius > 0 || radius < 12);\n\n\t\t\tconst color = colors.random[~~(Math.random() * colors.random.length)];\n\n\t\t\tconst particleConfig = {\n\t\t\t\tfriction: 0,\n\n\t\t\t\t// char: randomChar(),\n\t\t\t\tchar: randomChar(currentTransition === 'pattern' ? patternIndex : textIndex),\n\t\t\t\tinitX,\n\t\t\t\tinitY,\n\t\t\t\tx,\n\t\t\t\ty,\n\n\t\t\t\thasBorn,\n\n\t\t\t\tease: 0.04 + Math.random() * 0.06,\n\t\t\t\tbornSpeed: 0.07 + Math.random() * 0.07,\n\n\t\t\t\talpha: 0,\n\t\t\t\tmaxAlpha: 0.4 + Math.random() * 0.5,\n\n\t\t\t\tradius,\n\t\t\t\tmaxRadius: 3,\n\n\t\t\t\tcolor,\n\t\t\t\tinteractive: false,\n\n\t\t\t\tangle: 0,\n\n\t\t\t\tsteps,\n\t\t\t\tstepCount,\n\t\t\t\ttextIndex,\n\t\t\t\tpatternIndex,\n\t\t\t};\n\n\t\t\tif (particles[quantity]) {\n\t\t\t\tparticles[quantity] = {\n\t\t\t\t\t...particleConfig,\n\t\t\t\t\tx: fullreset ? particleConfig.x : particles[quantity].x,\n\t\t\t\t\ty: fullreset ? particleConfig.y : particles[quantity].y,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tparticles.push(particleConfig);\n\t\t\t}\n\t\t}\n\n\t\t// Go!\n\t\t// updateText();\n\t\tif (loopLogic) {\n\t\t\twindow.cancelAnimationFrame(loopLogic);\n\t\t}\n\t\tloop();\n\t};\n\n\twindow.reCreateCanvas = createParticles;\n\n\t/*\n\t * Transitions handler.\n\t */\n\n\tfunction updateTransition() {\n\t\t/* --- Shapes ---- */\n\t\t[].forEach.call(particles, (particle: any, index) => {\n\t\t\tswitch (currentTransition) {\n\t\t\t\tcase 'random':\n\n\t\t\t\t\tshape.x = particle.initX;\n\t\t\t\t\tshape.y = particle.initY;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'uniform':\n\t\t\t\tcase 'pattern':\n\t\t\t\t\tconst uniformFactor = Math.floor(Math.sqrt(particlesNumber));\n\t\t\t\t\tconst rowCount = Math.floor(particle.stepCount / uniformFactor);\n\t\t\t\t\tconst colCount = particle.stepCount % uniformFactor;\n\n\t\t\t\t\tconst rowUnit = canvas.width / uniformFactor;\n\t\t\t\t\tconst colUnit = canvas.height / uniformFactor;\n\n\t\t\t\t\tconst xOffset = thisOptions.screenMode === 'fullscreen' ? 40 : 10;\n\n\t\t\t\t\tshape.x = xOffset + rowCount * rowUnit;\n\t\t\t\t\tshape.y = 40 + colCount * colUnit;\n\n\t\t\t\t\t// var limit; var\n\t\t\t\t\t// \tsteps;\n\n\t\t\t\t\t// limit = (particles.length * 0.5) - 1;\n\t\t\t\t\t// steps = Math.PI * 2 * (index / limit);\n\n\t\t\t\t\t// // First oval\n\t\t\t\t\t// if (index < [].slice.call(particles, 0, limit).length) {\n\t\t\t\t\t// \tshape.x = canvas.width * 0.5 + 80 * Math.cos(steps);\n\t\t\t\t\t// \tshape.y = 180 + 140 * Math.sin(steps);\n\t\t\t\t\t// } else {\n\t\t\t\t\t// \t// Second oval\n\t\t\t\t\t// \tlimit = (particles.length * 0.5);\n\n\t\t\t\t\t// \tshape.x = canvas.width * 0.5 + 140 * Math.cos(steps);\n\t\t\t\t\t// \tshape.y = 180 + 80 * Math.sin(steps);\n\t\t\t\t\t// }\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ribbon':\n\n\t\t\t\t\tshape.x = canvas.width * 0.5 + 90 * (Math.sin(index)) * Math.cos(index);\n\t\t\t\t\tshape.y = 320 + 140 * (-Math.sin(index) - 1);\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// speed\n\t\t\tconst speed = 0.08 * (1 - particle.friction);\n\t\t\tif (!particle.interactive) {\n\t\t\t\t// particle.x += ((shape.x + Math.cos(particle.angle) * 5) - particle.x) * speed;\n\t\t\t\t// particle.y += ((shape.y + Math.sin(particle.angle) * 5) - particle.y) * speed;\n\t\t\t\tconst targetDistX = shape.x - particle.x;\n\t\t\t\tconst targetDistY = shape.y - particle.y;\n\t\t\t\tif (!particle.initialized || thisOptions.particlesBackToOrigin) {\n\t\t\t\t\tparticle.x += targetDistX * speed;\n\t\t\t\t\tparticle.y += targetDistY * speed;\n\t\t\t\t\tparticle.angle += 0.0001;\n\t\t\t\t\tparticle.initialized = (targetDistX < 0.05 && targetDistY < 0.05);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// particle.x += ((mouse.x + Math.sin(particle.angle) * 120) - particle.x) * 0.08;\n\t\t\t\t// particle.y += ((mouse.y + Math.cos(particle.angle) * 120) - particle.y) * 0.08;\n\t\t\t\tparticle.x -= (mouse.x - particle.x) * speed;\n\t\t\t\tparticle.y -= (mouse.y - particle.y) * speed;\n\t\t\t\tparticle.angle += 0.08;\n\t\t\t}\n\n\t\t\t// particle.angle += 0.08;\n\t\t});\n\n\t\t// Remove extra particles\n\t\tif (nextText.length < text.length) {\n\t\t\tconst extra = [].slice.call(text, nextText.length, text.length);\n\n\t\t\t// Remove extra text particles\n\t\t\tfor (let index = 0; index < extra.length; index++) text.splice(index, 1);\n\t\t}\n\t}\n\n\t/*\n\t * Loop logic.\n\t */\n\n\tfunction loop() {\n\t\tclear();\n\t\tupdate();\n\t\trender();\n\n\t\tloopLogic = window.requestAnimFrame(loop);\n\t}\n\n\t/*\n\t * Clear the whole screen.\n\t */\n\n\tfunction clear() {\n\t\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\t}\n\n\t// Circle\n\tvar drawASCIICircle = (radius: number) => {\n\t\t// x^2 + y^2 = radius^2 draws a circle\n\t\tconst circleString = [];\n\t\tconst expectedValue = radius ** 2;\n\n\t\t// imagine a graph with the centre of a circle right on point (0, 0)\n\t\tfor (let y = -radius; y < radius; y++) {\n\t\t\t// y first, because we go across before we go down (inner loop runs more often)\n\t\t\tfor (let x = -radius; x < radius; x++) {\n\t\t\t\tconst adjustedX = (x < 0) ? x + 1 : x;\n\t\t\t\tconst computedValue = Math.sqrt((adjustedX - radius * 1.25) ** 2 + (y - radius * 1.45) ** 2);\n\t\t\t\t// use radius to get a roughly single-thickness circle - double or halve this for corresponding results\n\t\t\t\tif ((Math.abs(computedValue) <= radius * 2.5)) {\n\t\t\t\t\tconst opac = (Math.abs(computedValue) / (radius * 2.4)) * 1;\n\t\t\t\t\tcircleString.push(opac ** 2);\n\t\t\t\t\t// if (x === 0) circleString += '1';\n\t\t\t\t} else {\n\t\t\t\t\tcircleString.push(0.1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// circleString += ('\\n');\n\t\t}\n\t\treturn circleString;\n\t};\n\n\t/*\n\t * Update the particles.\n\t */\n\n\tfunction update() {\n\t\tupdateTransition();\n\n\t\t[].forEach.call(particles, (particle: any, index) => {\n\t\t\tparticle.alpha += (particle.maxAlpha - particle.alpha) * 0.05;\n\n\t\t\tif (particle.hasBorn) {\n\t\t\t\tparticle.radius += (0 - particle.radius) * particle.bornSpeed;\n\n\t\t\t\tif (Math.round(particle.radius) === 0) {\n\t\t\t\t\t// Color transition\n\t\t\t\t\tswitch (currentTransition) {\n\t\t\t\t\t\tcase 'random':\n\n\t\t\t\t\t\t\tparticle.color = colors.random[~~(Math.random() * colors.random.length)];\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'uniform':\n\n\t\t\t\t\t\t\tparticle.color = colors.uniform[~~(Math.random() * colors.uniform.length)];\n\n\t\t\t\t\t\t\t// const rowUnit = canvas.width / uniformFactor;\n\t\t\t\t\t\t\t// const colUnit = canvas.width / uniformFactor;\n\t\t\t\t\t\t\tconst uniformFactor = Math.floor(Math.sqrt(particlesNumber));\n\t\t\t\t\t\t\tconst alphaPattern = drawASCIICircle(uniformFactor / 2);\n\t\t\t\t\t\t\tparticle.alpha = alphaPattern[particle.patternIndex - 1];\n\t\t\t\t\t\t\tparticle.maxAlpha = alphaPattern[particle.patternIndex - 1];\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'pattern':\n\n\t\t\t\t\t\t\tparticle.color = colors.uniform[~~(Math.random() * colors.uniform.length)];\n\t\t\t\t\t\t\tif (particle.char === '｜') {\n\t\t\t\t\t\t\t\tparticle.alpha = 0.4;\n\t\t\t\t\t\t\t\tparticle.maxAlpha = 0.4;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparticle.alpha = 0.75;\n\t\t\t\t\t\t\t\tparticle.maxAlpha = 0.75;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t// case 'pattern':\n\n\t\t\t\t\t\t\t// \t// particle.color = colors.drop[~~(Math.random() * colors.drop.length)];\n\t\t\t\t\t\t\t// \tconst uniformFactor = Math.floor(Math.sqrt(particlesNumber));\n\t\t\t\t\t\t\t// \tconst rowCount = Math.floor(particle.stepCount / uniformFactor);\n\t\t\t\t\t\t\t// \tconst colCount = particle.stepCount % uniformFactor;\n\n\t\t\t\t\t\t\t// \tconst circleDiameter = Math.floor(uniformFactor / 2);\n\t\t\t\t\t\t\t// \tconst circleStart = Math.floor(uniformFactor * 0.35);\n\t\t\t\t\t\t\t// \tconst circleEnd = Math.floor(uniformFactor * 0.85);\n\n\t\t\t\t\t\t\t// \tif (colCount > circleStart) {\n\t\t\t\t\t\t\t// \t\tconst colIndex = Math.abs(rowCount - circleDiameter);\n\t\t\t\t\t\t\t// \t\tif ((colIndex * colIndex) / 4 > (circleEnd - colCount) * 4) {\n\t\t\t\t\t\t\t// \t\t\tparticle.alpha = 0.1;\n\t\t\t\t\t\t\t// \t\t\tparticle.maxAlpha = 0.1;\n\t\t\t\t\t\t\t// \t\t}\n\t\t\t\t\t\t\t// \t}\n\n\t\t\t\t\t\t\t// \tbreak;\n\n\t\t\t\t\t\tcase 'ribbon':\n\n\t\t\t\t\t\t\tparticle.color = colors.ribbon[~~(Math.random() * colors.ribbon.length)];\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tparticle.hasBorn = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!particle.hasBorn) {\n\t\t\t\tparticle.radius += (particle.maxRadius - particle.radius) * particle.bornSpeed;\n\n\t\t\t\tif (Math.round(particle.radius) === particle.maxRadius) particle.hasBorn = true;\n\t\t\t}\n\n\t\t\tconst pureMouseParticleDistance = distanceTo(mouse, particle) - particle.radius;\n\t\t\tconst maxInteractiveEdge = 240;\n\t\t\tconst minInteractiveEdge = 120;\n\n\t\t\tif (pureMouseParticleDistance <= maxInteractiveEdge) {\n\t\t\t\t// Have interaction\n\t\t\t\tparticle.interactive = true;\n\t\t\t\tparticle.friction = (pureMouseParticleDistance - minInteractiveEdge) / (maxInteractiveEdge - minInteractiveEdge);\n\t\t\t\tif (particle.friction > 0.8) {\n\t\t\t\t\tparticle.friction = 1;\n\t\t\t\t}\n\t\t\t\t// particle.friction = 0;\n\t\t\t} else {\n\t\t\t\t// No interaction\n\t\t\t\tparticle.interactive = false;\n\t\t\t\tparticle.friction = 0;\n\t\t\t}\n\t\t});\n\t}\n\n\t/*\n\t * Render the particles.\n\t */\n\n\tfunction render() {\n\t\tlet fontSize = 50;\n\t\tif (window.innerWidth < 768) {\n\t\t\tfontSize = 24;\n\t\t} else if (window.innerWidth < 992) {\n\t\t\tfontSize = 36;\n\t\t}\n\t\t[].forEach.call(particles, (particle: any, index) => {\n\t\t\tcontext.save();\n\t\t\tcontext.globalAlpha = particle.alpha;\n\t\t\tcontext.fillStyle = particle.color;\n\t\t\tcontext.font = `${fontSize}px Lato, Arial, sans-serif`;\n\t\t\tcontext.fillText(particle.char, particle.x, particle.y);\n\t\t\tcontext.beginPath();\n\t\t\t// context.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\n\t\t\tcontext.fill();\n\t\t\tcontext.restore();\n\t\t});\n\t}\n\n\t/*\n\t * Distance between two points.\n\t */\n\n\tfunction distanceTo(pointA: any, pointB: any) {\n\t\tconst dx = Math.abs(pointA.x - pointB.x);\n\t\tconst dy = Math.abs(pointA.y - pointB.y);\n\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t}\n\n\t/*\n\t * Useful function for random integer between [min, max].\n\t */\n\n\tconst randomBetween = (min: any, max: any) => ~~(Math.random() * (max - min + 1) + min);\n\n\tconst randomChar = (index: number) => {\n\t\tconst basicChars = ['未', '來'];\n\t\tif (currentTransition === 'pattern') {\n\t\t\tif (index) {\n\t\t\t\tconst patternEncodedn\t\t\t\tconst chars = ['｜', ...Array.prototype.map.call(patternEncoded, (eachLetter) => eachLetter)];\n\t\t\t\treturn (chars[index] === '1') ? basicChars[Math.floor(Math.random() * basicChars.length)] : '｜';\n\t\t\t}\n\t\t\tconst randomChars = [...basicChars, '｜'];\n\t\t\treturn randomChars[Math.floor(Math.random() * randomChars.length)];\n\t\t}\n\t\tconst chars = ['｜', ...Array.prototype.map.call(thisOptions.chars || '｜', (eachLetter) => eachLetter)];\n\t\treturn chars[index || Math.floor(Math.random() * chars.length)] || '｜';\n\t};\n\n\t/*\n\t * Request new frame by Paul Irish.\n\t * 60 FPS.\n\t */\n\n\twindow.requestAnimFrame = (function () {\n\t\treturn window.requestAnimationFrame\n\t\t\t|| window.webkitRequestAnimationFrame\n\t\t\t|| window.mozRequestAnimationFrame\n\t\t\t|| window.oRequestAnimationFrame\n\t\t\t|| window.msRequestAnimationFrame\n\n\t\t\t|| function (callback) {\n\t\t\t\twindow.setTimeout(callback, 1000 / FPS);\n\t\t\t};\n\t}());\n\n\t// window.addEventListener('initCanvas', init, false);\n\tinit();\n};\n\nexport const initCanvas = (updatedOptions?: any) => {\n\t// const someEv: any = document.createEvent('HTMLEvents');\n\t// someEv.initEvent('initCanvas', true, true);\n\t// someEv.eventName = 'initCanvas';\n\t// document.dispatchEvent(someEv);\n\twindow.reCreateCanvas(true, updatedOptions);\n};\n\nexport default createCanvas;\n","import React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport { createCanvas, initCanvas } from '../../helper/sandCanvas';\nimport './SandTest2.scss';\n\ninterface Props {\n\tchars?: string[];\n\tparticlesBackToOrigin: boolean;\n\tmode: string;\n\tfullscreen?: boolean;\n\tscreenMode?: string;\n\trefreshTrigger?: number;\n}\n\nexport const SandTest2 = (\n\t{\n\t\tchars, particlesBackToOrigin, mode, fullscreen, screenMode = 'fullscreen', refreshTrigger = 0,\n\t}: Props,\n) => {\n\tconst [canvasCreated, setCanvasCreated] = useState<boolean>(false); // Edit Msg\n\n\tuseEffect(() => {\n\t\tif (chars && chars?.length) {\n\t\t\tconst formattedChars = (chars ? _.reverse([...chars]) : []).join('|');\n\t\t\tconst options: any = {\n\t\t\t\tchars: formattedChars,\n\t\t\t\tparticlesBackToOrigin,\n\t\t\t\tmode,\n\t\t\t\tscreenMode: fullscreen ? 'fullscreen' : screenMode,\n\t\t\t};\n\t\t\tif (!canvasCreated) {\n\t\t\t\tsetCanvasCreated(true);\n\t\t\t\tcreateCanvas(window, options);\n\t\t\t} else {\n\t\t\t\tinitCanvas(options);\n\t\t\t}\n\t\t}\n\t}, [chars, particlesBackToOrigin, mode, fullscreen, screenMode, refreshTrigger]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"sand-test-2\"\n\t\t>\n\t\t\t<div className=\"ip-slideshow-wrapper\">\n\t\t\t\t<div className=\"ip-slideshow\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SandTest2;\n","import React from 'react';\nimport './LoaderDots.scss';\n\ninterface Props {\n\tshow?: boolean;\n}\n\nexport const LoaderDots = ({ show = true }: Props) => (\n\t<div className={`loader-dots ${show ? 'is-show' : ''}`}>\n\t\t<span className=\"loader-dots__dot\" />\n\t\t<span className=\"loader-dots__dot\" />\n\t\t<span className=\"loader-dots__dot\" />\n\t\t<span className=\"loader-dots__dot\" />\n\t</div>\n);\n\nexport default LoaderDots;\n","import axios from 'axios';\n\nconst instance = axios.create({\n\tbaseURL: 'https://api.sandtable.hk/',\n\ttimeout: 5000,\n\theaders: { 'Content-Type': 'application/json' },\n});\n\nexport const setToken = (token: string) => {\n\tinstance.defaults.headers.common['x-access-token'] = token;\n};\n\nexport const setLang = (lang: string) => {\n\tinstance.defaults.headers.common['x-language'] = lang;\n};\n\nexport default instance;\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport useInterval from 'use-interval';\nimport _ from 'lodash';\nimport {\n\tuseHistory,\n} from 'react-router-dom';\nimport ReactSlider from 'react-slider';\nimport { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch';\nimport {\n\tLink, Element, Events, animateScroll as scroll, scrollSpy, scroller,\n} from 'react-scroll';\nimport SandTest2 from '../SandTest2/SandTest2';\nimport LoaderDots from '../LoaderDots/LoaderDots';\nimport { fetchMessages, submitMessages } from '../../api';\n\nimport './SandTable.scss';\n\ninterface Props {\n\tfullscreen?: boolean;\n}\n\n\nexport const SandTable = ({ fullscreen }: Props) => {\n\tconst history = useHistory();\n\tconst [refreshTrigger, setRefreshTrigger] = useState<number>(0);\n\tconst [inputMsg, setInputMsg] = useState<string>('');\n\tconst [msgs, setMsgs] = useState<string[]>([]);\n\tconst [particlesBackToOrigin, setParticlesBackToOrigin] = useState<boolean>(true); // Hidden options\n\tconst [mode, setMode] = useState<string>(fullscreen ? 'uniform' : 'pattern');\n\tconst [screenMode, setScreenMode] = useState<string>(fullscreen ? 'fullscreen' : 'halfscreen');\n\tconst [aboutOpen, setAboutOpen] = useState<boolean>(false); // Edit Msg\n\tconst [isTyping, setIsTyping] = useState<boolean>(false);\n\tconst [testCount, setTestCount] = useState<number>(0);\n\n\n\tconst checkWallQuery = () => {\n\t\tconst queries = new URLSearchParams(window.location.search);\n\t\tconst wall = queries.get('wall');\n\t\tif (wall) {\n\t\t\tsetScreenMode('fullscreen');\n\t\t\thistory.replace('/wall');\n\t\t}\n\t};\n\n\tconst loadMsgs = () => {\n\t\t// Initialize Message\n\t\tfetchMessages().then((res) => {\n\t\t\t// console.log('fetchMessages', res);\n\t\t\tconst tarMsg = res.data.map((item: any) => item.message);\n\t\t\t// console.log('_.xor(tarMsg, msgs)', _.xor(tarMsg, msgs));\n\t\t\t// setMsgs([tarMsg, test]);\n\t\t\tif (_.xor(tarMsg, msgs).length) {\n\t\t\t\tsetMsgs(tarMsg);\n\t\t\t}\n\t\t}).catch((e) => {\n\t\t\t// console.log('Error fetching messages');\n\t\t\tconst tarMsg = ['這不是', '真正的', '文案'];\n\t\t\t// console.log('_.xor(tarMsg, msgs)', _.xor(tarMsg, msgs));\n\t\t\tif (_.xor(tarMsg, msgs).length) {\n\t\t\t\tsetMsgs(tarMsg);\n\t\t\t}\n\t\t}).then(() => {\n\t\t\tsetRefreshTrigger(refreshTrigger + 1);\n\t\t});\n\t\tsetTestCount(testCount + 1);\n\t};\n\n\tuseEffect(() => {\n\t\t// Work around for \"/wall\" path\n\t\tcheckWallQuery();\n\t\t// On load trigger resize to prevent sandtable display issue\n\t\tsetTimeout(() => {\n\t\t\twindow.dispatchEvent(new Event('resize'));\n\t\t}, 500);\n\t\tif (screenMode !== 'fullscreen') {\n\t\t\tsetTimeout(() => {\n\t\t\t\t// setMode('uniform');\n\t\t\t}, 2500);\n\t\t}\n\t\tloadMsgs();\n\t}, []);\n\n\tuseInterval(() => {\n\t\tif (screenMode === 'fullscreen') {\n\t\t\tloadMsgs();\n\t\t}\n\t}, 40000);\n\n\t// Scroll to section\n\tconst scrollToSec = (key: string) => {\n\t\tscroller.scrollTo(`anchor-${key}`, {\n\t\t\tduration: 1000,\n\t\t\tdelay: 50,\n\t\t\tsmooth: true,\n\t\t\toffset: -40,\n\t\t});\n\t};\n\n\t// Control Sandtable\n\tconst addMsg = () => {\n\t\tconst newMsg = inputMsg;\n\t\tconst newMsgs = [\n\t\t\t...msgs,\n\t\t\tnewMsg,\n\t\t];\n\t\tsubmitMessages(newMsg);\n\t\tsetMsgs(newMsgs);\n\t\tsetInputMsg('');\n\t};\n\n\t// Edit and remove msg\n\n\t// const [editTextMode, setEditTextMode] = useState<boolean>(false); // Edit Msg\n\t// const [editMsg, setEditMsg] = useState<string>('');\n\t// const [zoomValue, setZoomValue] = useState<number>(0);\n\n\t// useEffect(() => {\n\t// \tsetEditMsg(msgs.join('___'));\n\t// }, [msgs]);\n\n\t// const toggleFullscreen = () => {\n\t// \tconst targetMode = screenMode === 'halfscreen' ? 'fullscreen' : 'halfscreen';\n\t// \tsetScreenMode(targetMode);\n\t// };\n\t// const saveEditedMsg = () => {\n\t// \tconst editedMsg: string[] = editMsg.split('___');\n\t// \tsetMsgs(editedMsg);\n\t// \tsetEditTextMode(false);\n\t// };\n\n\t// const cancelEditedMsg = () => {\n\t// \tsetEditMsg(msgs.join('___'));\n\t// \tsetEditTextMode(false);\n\t// };\n\n\tconst onFocusInput = () => {\n\t\tsetIsTyping(true);\n\t};\n\n\tconst onBlurInput = () => {\n\t\tsetIsTyping(false);\n\t};\n\n\tconst toAbout = () => {\n\t\tscrollToSec('about');\n\t\tsetAboutOpen(!aboutOpen);\n\t};\n\n\n\tconst SandTableSidebar = () => (\n\t\t<div className=\"sandtable__sidebar\">\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tonClick={() => toAbout()}\n\t\t\t\tclassName=\"sandtable__sidelink\"\n\t\t\t>\n\t\t\t\tAbout\n\t\t\t</button>\n\t\t\t<a\n\t\t\t\thref=\"/\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\tclassName=\"sandtable__sidelink\"\n\t\t\t>\n\t\t\t\tSupport\n\t\t\t</a>\n\t\t\t<a\n\t\t\t\thref=\"/\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\tclassName=\"sandtable__sidelink\"\n\t\t\t>\n\t\t\t\tFollow\n\t\t\t</a>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`sandtable is-${screenMode}`}\n\t\t>\n\t\t\t<div className=\"sandtable__mobile-menu\">\n\t\t\t\t<SandTableSidebar />\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName=\"sandtable__body\"\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"sandtable__board\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"sandtable__head\">\n\t\t\t\t\t\t<img className=\"sandtable__logo-en\" src={`${window.PUBLIC_URL}/img/img-sandtable-title.svg`} alt=\"\" />\n\t\t\t\t\t\t<img className=\"sandtable__logo-zh\" src={`${window.PUBLIC_URL}/img/img-sandtable-title-zh.svg`} alt=\"\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"sandtable-board\">\n\t\t\t\t\t\t<TransformWrapper\n\t\t\t\t\t\t\tdefaultScale={1}\n\t\t\t\t\t\t\t// defaultPositionX={-960}\n\t\t\t\t\t\t\t// defaultPositionY={450}\n\t\t\t\t\t\t\toptions={{\n\t\t\t\t\t\t\t\tminScale: 1,\n\t\t\t\t\t\t\t\tmaxScale: 4,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonZoomChange={(value: any) => {\n\t\t\t\t\t\t\t\twindow.canvasZoom = ((value.scale - 1) / 3) * 100;\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{({\n\t\t\t\t\t\t\t\tzoomIn, zoomOut, resetTransform, setScale, ...rest\n\t\t\t\t\t\t\t}: any) => (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<TransformComponent>\n\t\t\t\t\t\t\t\t\t\t<div className=\"sandtable-board__zoomer\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"sandtable-board__body\">\n\t\t\t\t\t\t\t\t\t\t\t\t<SandTest2\n\t\t\t\t\t\t\t\t\t\t\t\t\tchars={msgs}\n\t\t\t\t\t\t\t\t\t\t\t\t\tparticlesBackToOrigin={particlesBackToOrigin}\n\t\t\t\t\t\t\t\t\t\t\t\t\tmode={mode}\n\t\t\t\t\t\t\t\t\t\t\t\t\tscreenMode={screenMode}\n\t\t\t\t\t\t\t\t\t\t\t\t\trefreshTrigger={refreshTrigger}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</TransformComponent>\n\t\t\t\t\t\t\t\t\t<div className=\"tools-slider\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"tools-slider__wrapper\">\n\t\t\t\t\t\t\t\t\t\t\t<ReactSlider\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"tools-slider__body\"\n\t\t\t\t\t\t\t\t\t\t\t\tthumbClassName=\"tools-slider__thumb\"\n\t\t\t\t\t\t\t\t\t\t\t\ttrackClassName=\"tools-slider__track\"\n\t\t\t\t\t\t\t\t\t\t\t\trenderThumb={(props, state) => <div {...props}>{state.valueNow}</div>}\n\t\t\t\t\t\t\t\t\t\t\t\tdefaultValue={window?.canvasZoom || 0}\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={window?.canvasZoom || 0}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(val) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst scale = 1 + 3 * (val / 100);\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetScale(scale);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<button className=\"tools-slider__zoom-out\" type=\"button\" title=\"Zoom Out\" onClick={zoomOut}>-</button>\n\t\t\t\t\t\t\t\t\t\t<button className=\"tools-slider__zoom-in\" type=\"button\" title=\"Zoom In\" onClick={zoomIn}>+</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{/*\n\t\t\t\t\t\t\t\t\t\t<div className=\"tools\">\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Fullscreen\" className=\"fullscreen-btn\" onClick={() => toggleFullscreen()}>[ ]</button>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Zoom In\" onClick={zoomIn}>+</button>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Zoom Out\" onClick={zoomOut}>-</button>\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" title=\"Reset Zoom\" onClick={resetTransform}>x</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t*/}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</TransformWrapper>\n\t\t\t\t\t</div>\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<span className=\"ip-nav-left\" />\n\t\t\t\t\t\t<span className=\"ip-nav-right\" />\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"sandtable__control\"\n\t\t\t\t>\n\t\t\t\t\t<div className=\"sandtable__head\">\n\t\t\t\t\t\t<div />\n\t\t\t\t\t\t<div className=\"sandtable__sitetitle\">\n\t\t\t\t\t\t\t<span>Write Together 一起書寫</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"sandtable-interact-panel\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"sandtable-msg\">\n\t\t\t\t\t\t\t<div className=\"sandtable-msg__title\">\n\t\t\t\t\t\t\t\t一起書寫香港之書 Let’s continue the story of Hong Kong\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"sandtable-msg__msgs\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<span dangerouslySetInnerHTML={{ __html: `<em>致香港 To Hong Kong</em> <span></span> ${msgs.join(' <span class=\"sandtable-msg__dash\"></span> ')}` }} />\n\t\t\t\t\t\t\t\t<LoaderDots\n\t\t\t\t\t\t\t\t\tshow={isTyping}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"sandtable-msg-input\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tvalue={inputMsg}\n\t\t\t\t\t\t\t\t\tplaceholder=\"一起書寫 Write Together \"\n\t\t\t\t\t\t\t\t\tonFocus={() => onFocusInput()}\n\t\t\t\t\t\t\t\t\tonBlur={() => onBlurInput()}\n\t\t\t\t\t\t\t\t\tonChange={(e) => setInputMsg(e.target.value)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\tonClick={() => addMsg()}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`sandtable-about ${aboutOpen ? 'is-active' : ''}`}>\n\t\t\t\t\t\t\t<Element name=\"anchor-about\">\n\t\t\t\t\t\t\t\t<div className=\"sandtable-scrollpane\">\n\t\t\t\t\t\t\t\t\t<h3 className=\"sandtable-about__title\">關於 About</h3>\n\t\t\t\t\t\t\t\t\t<div className=\"sandtable-about__desc\">\n\t\t\t\t\t\t\t\t\t\t<p>Hong Kong is a nexus and a vessel for resonance between multiple cultures: if captured in words, it would be a co-authored, dynamic book of interactions, transcending time, and cultural differences.</p>\n\t\t\t\t\t\t\t\t\t\t<p>Visitors are invited to develop stories, dreams, and speculations on the histories and futures of Hong Kong as they encounter the urban legend of Ah Kwan Showing the Way, a fantasy concocted by early British colonialists. Combined with the materiality and notion of fortune-telling rituals, the audience will play a game of Chinese Whispers with this local legend as the basis, each day regenerating the past and producing a ‘fortune’ for the future.</p>\n\t\t\t\t\t\t\t\t\t\t<p>Captured in sand, visitors’ written strokes will be projected in the mirroring sites and recorded over the duration of the exhibition to collate an archive of resonance on- site and online. The pavilion, therefore, presents an alternative archive, documenting the multiple, interwoven, non-linear histories of Hong Kong, and encouraging collective speculation beyond the rhetorical narratives of the city’s future.</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Element>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<SandTableSidebar />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SandTable;\n","import axios from './axios';\n\nexport const fetchMessages = () => axios.get('messages');\n\nexport const submitMessages = (msg: any) => axios.post(`submit-message?message=${msg}`);\n\nexport const postMessages = (data: any) => axios.post('messages', data);\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n\t// useParams,\n\tuseHistory,\n} from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport './MainLayout.scss';\n\nimport SandTable from '../../components/SandTable/SandTable';\n\ninterface Props {\n\tfullscreen?: boolean;\n}\n\nexport const MainLayout = ({ fullscreen }: Props) => {\n\tconst [isWall, setIsWall] = useState<boolean>(false);\n\tconst { t } = useTranslation();\n\tconst history = useHistory();\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"main-layout\">\n\t\t\t\t<h1 className=\"a11y-hidden\">Sand Table</h1>\n\t\t\t\t<main className=\"main-layout__body\">\n\t\t\t\t\t<SandTable fullscreen={fullscreen} />\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\n\nexport default MainLayout;\n","import React, { useEffect, useState } from 'react';\nimport './PatternCreater.scss';\n\ninterface Props {\n\ttitle?: string;\n\tchildren?: JSX.Element[] | JSX.Element | string;\n}\n\nconst canvasSize = 33;\n\nexport const PatternCreater = ({ title, children }: Props) => {\n\t// Language\n\t// const { t } = useTranslation();\n\t// const lang = t('key');\n\tconst [onPoints, setOnPoints] = useState<Array<number>>(new Array(canvasSize * canvasSize).fill(0));\n\n\tuseEffect(() => {\n\t\tconst savedPoints = localStorage.getItem('onPoints');\n\t\tif (!savedPoints) return;\n\t\tconst optionsArr: any = Array.prototype.map.call(savedPoints || '', (eachLetter) => Number(eachLetter));\n\t\tsetOnPoints(optionsArr);\n\t}, []);\n\n\n\tconst togglePoint = (index: number) => {\n\t\t// console.log('togglePoint', index);\n\t\tconst newPoints = [...onPoints];\n\t\tnewPoints[index] = onPoints[index] ? 0 : 1;\n\t\tsetOnPoints(newPoints);\n\t\tlocalStorage.setItem('onPoints', newPoints.join(''));\n\t};\n\n\treturn (\n\t\t<div className=\"pattern-creater\">\n\t\t\t<div className=\"pattern-creater__board\">\n\t\t\t\t{\n\t\t\t\t\tonPoints.map((item: any, index: number) => (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName={`${onPoints[index] ? 'is-active' : ''}`}\n\t\t\t\t\t\t\tkey={`point-${index + 1}`}\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={() => togglePoint(index)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className=\"a11y-hidden\">point</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<div className=\"pattern-creater__result\">{onPoints.join('')}</div>\n\t\t</div>\n\t);\n};\n\nexport default PatternCreater;\n","import React from 'react';\nimport {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n} from 'react-router-dom';\nimport DemoLayout from '../layout/DemoLayout/DemoLayout';\nimport MainLayout from '../layout/MainLayout/MainLayout';\nimport PatternCreater from '../components/PatternCreater/PatternCreater';\n\nexport default () => (\n\t<Router>\n\t\t<Switch>\n\t\t\t<Route exact path=\"/wall\">\n\t\t\t\t<MainLayout fullscreen />\n\t\t\t</Route>\n\t\t\t<Route exact path=\"/pattern\" component={PatternCreater} />\n\t\t\t<Route exact path=\"/\" component={MainLayout} />\n\t\t</Switch>\n\t</Router>\n);\n","\nimport React, { useEffect } from 'react';\nimport MainRouter from './router';\n\nconst App: React.FC = () => {\n\t// const { lang: paramLang } = useParams();\n\n\treturn (\n\t\t<>\n\t\t\t<MainRouter />\n\t\t</>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}